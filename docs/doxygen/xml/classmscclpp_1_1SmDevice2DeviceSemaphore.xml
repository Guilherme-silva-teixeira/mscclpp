<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmscclpp_1_1SmDevice2DeviceSemaphore" kind="class" language="C++" prot="public">
    <compoundname>mscclpp::SmDevice2DeviceSemaphore</compoundname>
    <basecompoundref refid="classmscclpp_1_1BaseSemaphore" prot="public" virt="non-virtual">mscclpp::BaseSemaphore&lt; CudaDeleter, CudaDeleter &gt;</basecompoundref>
    <includes refid="semaphore_8hpp" local="no">semaphore.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmscclpp_1_1SmDevice2DeviceSemaphore_1a1ed9818ce26e8281d3cdb003a61ef248" prot="public" static="no">
        <type><ref refid="structmscclpp_1_1SmDevice2DeviceSemaphoreDeviceHandle" kindref="compound">SmDevice2DeviceSemaphoreDeviceHandle</ref></type>
        <definition>using mscclpp::SmDevice2DeviceSemaphore::DeviceHandle =  SmDevice2DeviceSemaphoreDeviceHandle</definition>
        <argsstring></argsstring>
        <name>DeviceHandle</name>
        <briefdescription>
<para>Device-side handle for <ref refid="classmscclpp_1_1SmDevice2DeviceSemaphore" kindref="compound">SmDevice2DeviceSemaphore</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/semaphore.hpp" line="131" column="3" bodyfile="/root/mscclpp/include/mscclpp/semaphore.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmscclpp_1_1SmDevice2DeviceSemaphore_1a38f5c3a55699515d16e9f96cbadb89f8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mscclpp::SmDevice2DeviceSemaphore::isRemoteInboundSemaphoreIdSet_</definition>
        <argsstring></argsstring>
        <name>isRemoteInboundSemaphoreIdSet_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/semaphore.hpp" line="136" column="8" bodyfile="/root/mscclpp/include/mscclpp/semaphore.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmscclpp_1_1SmDevice2DeviceSemaphore_1a3f6933c37c99106cc39510165d7006d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mscclpp::SmDevice2DeviceSemaphore::SmDevice2DeviceSemaphore</definition>
        <argsstring>(Communicator &amp;communicator, std::shared_ptr&lt; Connection &gt; connection)</argsstring>
        <name>SmDevice2DeviceSemaphore</name>
        <param>
          <type><ref refid="classmscclpp_1_1Communicator" kindref="compound">Communicator</ref> &amp;</type>
          <declname>communicator</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classmscclpp_1_1Connection" kindref="compound">Connection</ref> &gt;</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>communicator</parametername>
</parameternamelist>
<parameterdescription>
<para>The communicator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection associated with this semaphore. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/semaphore.hpp" line="125" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmscclpp_1_1SmDevice2DeviceSemaphore_1ab238869f02562031eeaea62d78b07ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mscclpp::SmDevice2DeviceSemaphore::SmDevice2DeviceSemaphore</definition>
        <argsstring>()=delete</argsstring>
        <name>SmDevice2DeviceSemaphore</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/semaphore.hpp" line="128" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmscclpp_1_1SmDevice2DeviceSemaphore_1ae6cece1f7f231e473d74c24dcb6f1217" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmscclpp_1_1SmDevice2DeviceSemaphore_1a1ed9818ce26e8281d3cdb003a61ef248" kindref="member">DeviceHandle</ref></type>
        <definition>DeviceHandle mscclpp::SmDevice2DeviceSemaphore::deviceHandle</definition>
        <argsstring>() const</argsstring>
        <name>deviceHandle</name>
        <briefdescription>
<para>Returns the device-side handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/semaphore.hpp" line="134" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A semaphore for sending signals from the local device to a peer device via SM. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mscclpp::BaseSemaphore&lt; CudaDeleter, CudaDeleter &gt;</label>
        <link refid="classmscclpp_1_1BaseSemaphore"/>
      </node>
      <node id="1">
        <label>mscclpp::SmDevice2DeviceSemaphore</label>
        <link refid="classmscclpp_1_1SmDevice2DeviceSemaphore"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>mscclpp::NonblockingFuture&lt; mscclpp::RegisteredMemory &gt;</label>
        <link refid="classmscclpp_1_1NonblockingFuture"/>
      </node>
      <node id="2">
        <label>mscclpp::BaseSemaphore&lt; CudaDeleter, CudaDeleter &gt;</label>
        <link refid="classmscclpp_1_1BaseSemaphore"/>
        <childnode refid="3" relation="usage">
          <edgelabel>remoteInboundSemaphoreIdsRegMem_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>mscclpp::SmDevice2DeviceSemaphore</label>
        <link refid="classmscclpp_1_1SmDevice2DeviceSemaphore"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/root/mscclpp/include/mscclpp/semaphore.hpp" line="120" column="54" bodyfile="/root/mscclpp/include/mscclpp/semaphore.hpp" bodystart="120" bodyend="137"/>
    <listofallmembers>
      <member refid="classmscclpp_1_1BaseSemaphore_1a1f438a138ad58311a3a97966f647b5c2" prot="public" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>BaseSemaphore</name></member>
      <member refid="classmscclpp_1_1SmDevice2DeviceSemaphore_1a1ed9818ce26e8281d3cdb003a61ef248" prot="public" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>DeviceHandle</name></member>
      <member refid="classmscclpp_1_1SmDevice2DeviceSemaphore_1ae6cece1f7f231e473d74c24dcb6f1217" prot="public" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>deviceHandle</name></member>
      <member refid="classmscclpp_1_1BaseSemaphore_1a13cc1511293d69d57f2bae285844129c" prot="protected" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>expectedInboundSemaphore_</name></member>
      <member refid="classmscclpp_1_1SmDevice2DeviceSemaphore_1a38f5c3a55699515d16e9f96cbadb89f8" prot="public" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>isRemoteInboundSemaphoreIdSet_</name></member>
      <member refid="classmscclpp_1_1BaseSemaphore_1aa3f8d454e6f289f7fc004107b3698b90" prot="protected" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>localInboundSemaphore_</name></member>
      <member refid="classmscclpp_1_1BaseSemaphore_1aec4ea46dd287fbc9c619dcc9a2df2886" prot="protected" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>outboundSemaphore_</name></member>
      <member refid="classmscclpp_1_1BaseSemaphore_1a5f3a599ecb971f2613df2b0cb9467a55" prot="protected" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>remoteInboundSemaphoreIdsRegMem_</name></member>
      <member refid="classmscclpp_1_1SmDevice2DeviceSemaphore_1a3f6933c37c99106cc39510165d7006d9" prot="public" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>SmDevice2DeviceSemaphore</name></member>
      <member refid="classmscclpp_1_1SmDevice2DeviceSemaphore_1ab238869f02562031eeaea62d78b07ebd" prot="public" virt="non-virtual"><scope>mscclpp::SmDevice2DeviceSemaphore</scope><name>SmDevice2DeviceSemaphore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

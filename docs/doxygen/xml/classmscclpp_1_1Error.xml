<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmscclpp_1_1Error" kind="class" language="C++" prot="public">
    <compoundname>mscclpp::Error</compoundname>
    <basecompoundref refid="classmscclpp_1_1BaseError" prot="public" virt="non-virtual">mscclpp::BaseError</basecompoundref>
    <includes refid="errors_8hpp" local="no">errors.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmscclpp_1_1Error_1aa7f1033551301bfcfab6cbbebf48652a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mscclpp::Error::Error</definition>
        <argsstring>(const std::string &amp;message, ErrorCode errorCode)</argsstring>
        <name>Error</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="namespacemscclpp_1abfe795a8ee512f106d16ae733255ddbc" kindref="member">ErrorCode</ref></type>
          <declname>errorCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/errors.hpp" line="63" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmscclpp_1_1Error_1a2c6ffa0e3d9516e079997d8135a880c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual mscclpp::Error::~Error</definition>
        <argsstring>()=default</argsstring>
        <name>~Error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/errors.hpp" line="64" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classmscclpp_1_1Error_1a98e0eaded64ecfee29d67434cca9dd6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacemscclpp_1abfe795a8ee512f106d16ae733255ddbc" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode mscclpp::Error::getErrorCode</definition>
        <argsstring>() const</argsstring>
        <name>getErrorCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/errors.hpp" line="65" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A generic error. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>std::runtime_error</label>
      </node>
      <node id="1">
        <label>mscclpp::Error</label>
        <link refid="classmscclpp_1_1Error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>mscclpp::BaseError</label>
        <link refid="classmscclpp_1_1BaseError"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>std::runtime_error</label>
      </node>
      <node id="1">
        <label>mscclpp::Error</label>
        <link refid="classmscclpp_1_1Error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>mscclpp::BaseError</label>
        <link refid="classmscclpp_1_1BaseError"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/root/mscclpp/include/mscclpp/errors.hpp" line="61" column="29" bodyfile="/root/mscclpp/include/mscclpp/errors.hpp" bodystart="61" bodyend="66"/>
    <listofallmembers>
      <member refid="classmscclpp_1_1BaseError_1aea99c987306c47a44a8720b1bddf8901" prot="public" virt="non-virtual"><scope>mscclpp::Error</scope><name>BaseError</name></member>
      <member refid="classmscclpp_1_1BaseError_1a1be995088a556e5627ba5a06d3b698d8" prot="public" virt="non-virtual"><scope>mscclpp::Error</scope><name>BaseError</name></member>
      <member refid="classmscclpp_1_1Error_1aa7f1033551301bfcfab6cbbebf48652a" prot="public" virt="non-virtual"><scope>mscclpp::Error</scope><name>Error</name></member>
      <member refid="classmscclpp_1_1BaseError_1a10e56452844c8f3b59ffdd5dd25bf805" prot="protected" virt="non-virtual"><scope>mscclpp::Error</scope><name>errorCode_</name></member>
      <member refid="classmscclpp_1_1Error_1a98e0eaded64ecfee29d67434cca9dd6c" prot="public" virt="non-virtual"><scope>mscclpp::Error</scope><name>getErrorCode</name></member>
      <member refid="classmscclpp_1_1BaseError_1a7ffe97152f9083131bfd7d3eb27c4751" prot="protected" virt="non-virtual"><scope>mscclpp::Error</scope><name>message_</name></member>
      <member refid="classmscclpp_1_1BaseError_1ac3b7c44b7d625195e19e97e4407b7f65" prot="public" virt="non-virtual"><scope>mscclpp::Error</scope><name>what</name></member>
      <member refid="classmscclpp_1_1BaseError_1a3e83519aadf3747f6325b6fc2abf53ea" prot="public" virt="virtual"><scope>mscclpp::Error</scope><name>~BaseError</name></member>
      <member refid="classmscclpp_1_1Error_1a2c6ffa0e3d9516e079997d8135a880c4" prot="public" virt="virtual"><scope>mscclpp::Error</scope><name>~Error</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmscclpp_1_1ProxyChannel" kind="struct" language="C++" prot="public">
    <compoundname>mscclpp::ProxyChannel</compoundname>
    <includes refid="proxy__channel_8hpp" local="no">proxy_channel.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmscclpp_1_1ProxyChannel_1a743cb0cae9c5f602f8259b9e818f1cab" prot="public" static="no">
        <type><ref refid="structmscclpp_1_1ProxyChannelDeviceHandle" kindref="compound">ProxyChannelDeviceHandle</ref></type>
        <definition>using mscclpp::ProxyChannel::DeviceHandle =  ProxyChannelDeviceHandle</definition>
        <argsstring></argsstring>
        <name>DeviceHandle</name>
        <briefdescription>
<para>Device-side handle for <ref refid="structmscclpp_1_1ProxyChannel" kindref="compound">ProxyChannel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="92" column="3" bodyfile="/root/mscclpp/include/mscclpp/proxy_channel.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structmscclpp_1_1ProxyChannel_1a637bd020569f7286597dba013b2330ff" prot="private" static="no" mutable="no">
        <type><ref refid="namespacemscclpp_1ac6b7b716d281fa7b0a2a46f5c2c4893c" kindref="member">SemaphoreId</ref></type>
        <definition>SemaphoreId mscclpp::ProxyChannel::semaphoreId_</definition>
        <argsstring></argsstring>
        <name>semaphoreId_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="76" column="15" bodyfile="/root/mscclpp/include/mscclpp/proxy_channel.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1ProxyChannel_1ad67f3eeaa5fa6b56d93bdf54c43e9445" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classmscclpp_1_1Host2DeviceSemaphore" kindref="compound">Host2DeviceSemaphore</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Host2DeviceSemaphore&gt; mscclpp::ProxyChannel::semaphore_</definition>
        <argsstring></argsstring>
        <name>semaphore_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="78" column="19" bodyfile="/root/mscclpp/include/mscclpp/proxy_channel.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1ProxyChannel_1a2c6b21c932494fa185186bdf91575e7c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classmscclpp_1_1Proxy" kindref="compound">Proxy</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Proxy&gt; mscclpp::ProxyChannel::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="80" column="19" bodyfile="/root/mscclpp/include/mscclpp/proxy_channel.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmscclpp_1_1ProxyChannel_1a307c9c9a1031493d322b5afbaeeeee94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mscclpp::ProxyChannel::ProxyChannel</definition>
        <argsstring>()=default</argsstring>
        <name>ProxyChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="83" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1ProxyChannel_1a8a3b57c12af2a1bb481104e5ddf25f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mscclpp::ProxyChannel::ProxyChannel</definition>
        <argsstring>(SemaphoreId semaphoreId, std::shared_ptr&lt; Host2DeviceSemaphore &gt; semaphore, std::shared_ptr&lt; Proxy &gt; proxy)</argsstring>
        <name>ProxyChannel</name>
        <param>
          <type><ref refid="namespacemscclpp_1ac6b7b716d281fa7b0a2a46f5c2c4893c" kindref="member">SemaphoreId</ref></type>
          <declname>semaphoreId</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classmscclpp_1_1Host2DeviceSemaphore" kindref="compound">Host2DeviceSemaphore</ref> &gt;</type>
          <declname>semaphore</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classmscclpp_1_1Proxy" kindref="compound">Proxy</ref> &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="85" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1ProxyChannel_1a42b0e5538d00278ffcbf3dd09f68a4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mscclpp::ProxyChannel::ProxyChannel</definition>
        <argsstring>(const ProxyChannel &amp;other)=default</argsstring>
        <name>ProxyChannel</name>
        <param>
          <type>const <ref refid="structmscclpp_1_1ProxyChannel" kindref="compound">ProxyChannel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="87" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1ProxyChannel_1a07deaa22c2e34b934556e25286d96e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmscclpp_1_1ProxyChannel" kindref="compound">ProxyChannel</ref> &amp;</type>
        <definition>ProxyChannel&amp; mscclpp::ProxyChannel::operator=</definition>
        <argsstring>(ProxyChannel &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structmscclpp_1_1ProxyChannel" kindref="compound">ProxyChannel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="89" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1ProxyChannel_1a973c1ffc6fd221faba9f6cb9b83c7aff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmscclpp_1_1ProxyChannel_1a743cb0cae9c5f602f8259b9e818f1cab" kindref="member">DeviceHandle</ref></type>
        <definition>DeviceHandle mscclpp::ProxyChannel::deviceHandle</definition>
        <argsstring>() const</argsstring>
        <name>deviceHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the device-side handle.</para>
<para>User should make sure the <ref refid="structmscclpp_1_1ProxyChannel" kindref="compound">ProxyChannel</ref> is not released when using the returned handle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="98" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmscclpp_1_1Proxy" kindref="compound">Proxy</ref> channel. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/root/mscclpp/include/mscclpp/proxy_channel.hpp" line="74" column="19" bodyfile="/root/mscclpp/include/mscclpp/proxy_channel.hpp" bodystart="74" bodyend="99"/>
    <listofallmembers>
      <member refid="structmscclpp_1_1ProxyChannel_1a743cb0cae9c5f602f8259b9e818f1cab" prot="public" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>DeviceHandle</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a973c1ffc6fd221faba9f6cb9b83c7aff" prot="public" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>deviceHandle</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a07deaa22c2e34b934556e25286d96e66" prot="public" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>operator=</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a2c6b21c932494fa185186bdf91575e7c" prot="private" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>proxy_</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a307c9c9a1031493d322b5afbaeeeee94" prot="public" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>ProxyChannel</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a8a3b57c12af2a1bb481104e5ddf25f28" prot="public" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>ProxyChannel</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a42b0e5538d00278ffcbf3dd09f68a4fe" prot="public" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>ProxyChannel</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1ad67f3eeaa5fa6b56d93bdf54c43e9445" prot="private" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>semaphore_</name></member>
      <member refid="structmscclpp_1_1ProxyChannel_1a637bd020569f7286597dba013b2330ff" prot="private" virt="non-virtual"><scope>mscclpp::ProxyChannel</scope><name>semaphoreId_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmscclpp_1_1EndpointConfig" kind="struct" language="C++" prot="public">
    <compoundname>mscclpp::EndpointConfig</compoundname>
    <includes refid="core_8hpp" local="no">core.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1ab3ca5aca93af630f26766bf3bc80bc21" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int mscclpp::EndpointConfig::DefaultMaxCqSize</definition>
        <argsstring></argsstring>
        <name>DefaultMaxCqSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="465" column="20" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1a386e60334cfaff1b077325170f35a45e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int mscclpp::EndpointConfig::DefaultMaxCqPollNum</definition>
        <argsstring></argsstring>
        <name>DefaultMaxCqPollNum</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="466" column="20" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1af0a91cc2ce66e43a837c4537c676c6e5" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int mscclpp::EndpointConfig::DefaultMaxSendWr</definition>
        <argsstring></argsstring>
        <name>DefaultMaxSendWr</name>
        <initializer>= 8192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="467" column="20" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1a9a953a01ee0f8d2e9354ac2314a0a534" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int mscclpp::EndpointConfig::DefaultMaxWrPerSend</definition>
        <argsstring></argsstring>
        <name>DefaultMaxWrPerSend</name>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="468" column="20" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1a7e087c523405a3c5fa831c5d3cd92eee" prot="public" static="no" mutable="no">
        <type><ref refid="namespacemscclpp_1a8a3c0a9f4ff7265a1fc612e32d8004a5" kindref="member">Transport</ref></type>
        <definition>Transport mscclpp::EndpointConfig::transport</definition>
        <argsstring></argsstring>
        <name>transport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="470" column="13" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1adf8fcb0cf1629291779357d95e10940f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mscclpp::EndpointConfig::ibMaxCqSize</definition>
        <argsstring></argsstring>
        <name>ibMaxCqSize</name>
        <initializer>= <ref refid="structmscclpp_1_1EndpointConfig_1ab3ca5aca93af630f26766bf3bc80bc21" kindref="member">DefaultMaxCqSize</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="471" column="7" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1a1731b60320378fabd2bc0a25dfc4e5b8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mscclpp::EndpointConfig::ibMaxCqPollNum</definition>
        <argsstring></argsstring>
        <name>ibMaxCqPollNum</name>
        <initializer>= <ref refid="structmscclpp_1_1EndpointConfig_1a386e60334cfaff1b077325170f35a45e" kindref="member">DefaultMaxCqPollNum</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="472" column="7" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1a3664a28757c214abd288b4b2e41e78c4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mscclpp::EndpointConfig::ibMaxSendWr</definition>
        <argsstring></argsstring>
        <name>ibMaxSendWr</name>
        <initializer>= <ref refid="structmscclpp_1_1EndpointConfig_1af0a91cc2ce66e43a837c4537c676c6e5" kindref="member">DefaultMaxSendWr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="473" column="7" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1EndpointConfig_1aeb249794110e711618e2683dec85ddb5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mscclpp::EndpointConfig::ibMaxWrPerSend</definition>
        <argsstring></argsstring>
        <name>ibMaxWrPerSend</name>
        <initializer>= <ref refid="structmscclpp_1_1EndpointConfig_1a9a953a01ee0f8d2e9354ac2314a0a534" kindref="member">DefaultMaxWrPerSend</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="474" column="7" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="474" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmscclpp_1_1EndpointConfig_1a12ea27a851fd0dca2b06f489ba49e6a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mscclpp::EndpointConfig::EndpointConfig</definition>
        <argsstring>()</argsstring>
        <name>EndpointConfig</name>
        <briefdescription>
<para>Default constructor. Sets transport to <ref refid="namespacemscclpp_1a8a3c0a9f4ff7265a1fc612e32d8004a5a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">Transport::Unknown</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="477" column="3" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1EndpointConfig_1aefd631df12e9e3de680d5836a0578a32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mscclpp::EndpointConfig::EndpointConfig</definition>
        <argsstring>(Transport transport)</argsstring>
        <name>EndpointConfig</name>
        <param>
          <type><ref refid="namespacemscclpp_1a8a3c0a9f4ff7265a1fc612e32d8004a5" kindref="member">Transport</ref></type>
          <declname>transport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor that takes a transport and sets the other fields to their default values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transport</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/core.hpp" line="482" column="3" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="482" bodyend="482"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Used to configure an endpoint. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/root/mscclpp/include/mscclpp/core.hpp" line="464" column="21" bodyfile="/root/mscclpp/include/mscclpp/core.hpp" bodystart="464" bodyend="483"/>
    <listofallmembers>
      <member refid="structmscclpp_1_1EndpointConfig_1a386e60334cfaff1b077325170f35a45e" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>DefaultMaxCqPollNum</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1ab3ca5aca93af630f26766bf3bc80bc21" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>DefaultMaxCqSize</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1af0a91cc2ce66e43a837c4537c676c6e5" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>DefaultMaxSendWr</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1a9a953a01ee0f8d2e9354ac2314a0a534" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>DefaultMaxWrPerSend</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1a12ea27a851fd0dca2b06f489ba49e6a7" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>EndpointConfig</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1aefd631df12e9e3de680d5836a0578a32" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>EndpointConfig</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1a1731b60320378fabd2bc0a25dfc4e5b8" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>ibMaxCqPollNum</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1adf8fcb0cf1629291779357d95e10940f" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>ibMaxCqSize</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1a3664a28757c214abd288b4b2e41e78c4" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>ibMaxSendWr</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1aeb249794110e711618e2683dec85ddb5" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>ibMaxWrPerSend</name></member>
      <member refid="structmscclpp_1_1EndpointConfig_1a7e087c523405a3c5fa831c5d3cd92eee" prot="public" virt="non-virtual"><scope>mscclpp::EndpointConfig</scope><name>transport</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

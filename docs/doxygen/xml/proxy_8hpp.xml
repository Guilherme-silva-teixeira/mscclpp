<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="proxy_8hpp" kind="file" language="C++">
    <compoundname>proxy.hpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes refid="fifo_8hpp" local="yes">fifo.hpp</includes>
    <includedby refid="proxy__channel_8hpp" local="yes">proxy_channel.hpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>device.hpp</label>
        <link refid="device_8hpp"/>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>proxy.hpp</label>
        <link refid="proxy_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="4">
        <label>fifo.hpp</label>
        <link refid="fifo_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>fifo_device.hpp</label>
        <link refid="fifo__device_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>proxy.hpp</label>
        <link refid="proxy_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>proxy_channel.hpp</label>
        <link refid="proxy__channel_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmscclpp_1_1Proxy" prot="public">mscclpp::Proxy</innerclass>
    <innernamespace refid="namespacemscclpp">mscclpp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MSCCLPP_PROXY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSCCLPP_PROXY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fifo_8hpp" kindref="compound">fifo.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemscclpp" kindref="compound">mscclpp</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacemscclpp_1ad8b700e44edeb049b38add920666759f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacemscclpp_1ad8b700e44edeb049b38add920666759f" kindref="member">ProxyHandlerResult</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="namespacemscclpp_1ad8b700e44edeb049b38add920666759faa0bfb8e59e6c13fc8d990781f77694fe" kindref="member">Continue</ref>,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="namespacemscclpp_1ad8b700e44edeb049b38add920666759fa15499a7fff2bc6ba591660047b46fd4e" kindref="member">FlushFifoTailAndContinue</ref>,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="namespacemscclpp_1ad8b700e44edeb049b38add920666759fa11a755d598c0c417f9a36758c3da7481" kindref="member">Stop</ref>,</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Proxy;</highlight></codeline>
<codeline lineno="21" refid="namespacemscclpp_1a073987e5c4ba2650412cea9523bcd9d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacemscclpp_1a073987e5c4ba2650412cea9523bcd9d0" kindref="member">ProxyHandler</ref><sp/>=<sp/>std::function&lt;<ref refid="namespacemscclpp_1ad8b700e44edeb049b38add920666759f" kindref="member">ProxyHandlerResult</ref>(<ref refid="structmscclpp_1_1ProxyTrigger" kindref="compound">ProxyTrigger</ref>)&gt;;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classmscclpp_1_1Proxy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmscclpp_1_1Proxy" kindref="compound">Proxy</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classmscclpp_1_1Proxy_1a5cc0dfbad7b29e7d5f28bde0f8bc824a" kindref="member">Proxy</ref>(<ref refid="namespacemscclpp_1a073987e5c4ba2650412cea9523bcd9d0" kindref="member">ProxyHandler</ref><sp/>handler,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;<sp/>threadInit,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fifoSize<sp/>=<sp/><ref refid="namespacemscclpp_1aa40b9c69ba9b54d1f87f52573162c31c" kindref="member">DEFAULT_FIFO_SIZE</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classmscclpp_1_1Proxy_1a5cc0dfbad7b29e7d5f28bde0f8bc824a" kindref="member">Proxy</ref>(<ref refid="namespacemscclpp_1a073987e5c4ba2650412cea9523bcd9d0" kindref="member">ProxyHandler</ref><sp/>handler,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fifoSize<sp/>=<sp/><ref refid="namespacemscclpp_1aa40b9c69ba9b54d1f87f52573162c31c" kindref="member">DEFAULT_FIFO_SIZE</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="classmscclpp_1_1Proxy_1a81d6ba99fdce09c07ffa94b92dba20ae" kindref="member">~Proxy</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmscclpp_1_1Proxy_1aa21d0c55b9f419c031b6a94cf6cd8e8d" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmscclpp_1_1Proxy_1abd7ec02a2c0787f270f65bb508c9b60f" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classmscclpp_1_1Fifo" kindref="compound">Fifo</ref>&amp;<sp/><ref refid="classmscclpp_1_1Proxy_1a3256ff714acc1c577682ab6e12881a58" kindref="member">fifo</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Impl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Impl&gt;<sp/>pimpl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mscclpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>MSCCLPP_PROXY_HPP_</highlight></codeline>
    </programlisting>
    <location file="/root/mscclpp/include/mscclpp/proxy.hpp"/>
  </compounddef>
</doxygen>

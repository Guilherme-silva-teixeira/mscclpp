<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer" kind="struct" language="C++" prot="public">
    <compoundname>mscclpp::NvlsConnection::DeviceMulticastPointer</compoundname>
    <includes refid="nvls_8hpp" local="no">nvls.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a826ec4d19455aa85e9cf832c17541233" prot="public" static="no">
        <type><ref refid="structmscclpp_1_1DeviceMulticastPointerDeviceHandle" kindref="compound">DeviceMulticastPointerDeviceHandle</ref></type>
        <definition>using mscclpp::NvlsConnection::DeviceMulticastPointer::DeviceHandle =  DeviceMulticastPointerDeviceHandle</definition>
        <argsstring></argsstring>
        <name>DeviceHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="33" column="5" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a0106e1e9a8e4e5bc5f1b527fbe84829d" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structmscclpp_1_1PhysicalCudaMemory" kindref="compound">PhysicalCudaMemory</ref>&lt; char &gt; &gt;</type>
        <definition>std::shared_ptr&lt;PhysicalCudaMemory&lt;char&gt; &gt; mscclpp::NvlsConnection::DeviceMulticastPointer::deviceMem_</definition>
        <argsstring></argsstring>
        <name>deviceMem_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="28" column="21" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1ae20d7b7d1da288f6f14546ab80c4b67e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; char &gt;</type>
        <definition>std::shared_ptr&lt;char&gt; mscclpp::NvlsConnection::DeviceMulticastPointer::mcPtr_</definition>
        <argsstring></argsstring>
        <name>mcPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="29" column="21" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1aeea0539c1290df5f9f0547dd33b0658e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t mscclpp::NvlsConnection::DeviceMulticastPointer::bufferSize_</definition>
        <argsstring></argsstring>
        <name>bufferSize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="30" column="12" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a6cec34d4ef3b63c8c6f812bf26b75245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class NvlsConnection</definition>
        <argsstring></argsstring>
        <name>NvlsConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="40" column="5" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a1e1ace787e9501934882f9b2a7f6cbd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mscclpp::NvlsConnection::DeviceMulticastPointer::DeviceMulticastPointer</definition>
        <argsstring>(std::shared_ptr&lt; PhysicalCudaMemory&lt; char &gt;&gt; deviceMem, std::shared_ptr&lt; char &gt; mcPtr, size_t bufferSize)</argsstring>
        <name>DeviceMulticastPointer</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structmscclpp_1_1PhysicalCudaMemory" kindref="compound">PhysicalCudaMemory</ref>&lt; char &gt;&gt;</type>
          <declname>deviceMem</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; char &gt;</type>
          <declname>mcPtr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="34" column="5" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a0316389580e2ef18c02c76d09d57f615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a826ec4d19455aa85e9cf832c17541233" kindref="member">DeviceHandle</ref></type>
        <definition>DeviceHandle mscclpp::NvlsConnection::DeviceMulticastPointer::deviceHandle</definition>
        <argsstring>()</argsstring>
        <name>deviceHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="37" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a781622c1d257d3a9a506cb9da9e13a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* mscclpp::NvlsConnection::DeviceMulticastPointer::getDevicePtr</definition>
        <argsstring>()</argsstring>
        <name>getDevicePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="38" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/root/mscclpp/include/mscclpp/nvls.hpp" line="26" column="31" bodyfile="/root/mscclpp/include/mscclpp/nvls.hpp" bodystart="26" bodyend="41"/>
    <listofallmembers>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1aeea0539c1290df5f9f0547dd33b0658e" prot="private" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>bufferSize_</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a826ec4d19455aa85e9cf832c17541233" prot="public" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>DeviceHandle</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a0316389580e2ef18c02c76d09d57f615" prot="public" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>deviceHandle</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a0106e1e9a8e4e5bc5f1b527fbe84829d" prot="private" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>deviceMem_</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a1e1ace787e9501934882f9b2a7f6cbd7" prot="public" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>DeviceMulticastPointer</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a781622c1d257d3a9a506cb9da9e13a91" prot="public" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>getDevicePtr</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1ae20d7b7d1da288f6f14546ab80c4b67e" prot="private" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>mcPtr_</name></member>
      <member refid="structmscclpp_1_1NvlsConnection_1_1DeviceMulticastPointer_1a6cec34d4ef3b63c8c6f812bf26b75245" prot="public" virt="non-virtual"><scope>mscclpp::NvlsConnection::DeviceMulticastPointer</scope><name>NvlsConnection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
